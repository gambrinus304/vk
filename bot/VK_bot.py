
# -*- coding: utf-8 -*-
import requests
import sys 
sys.path.append('..')
from settings import token
import random
#from time import sleep


# sender_id = 29465900
# r_message = 'hello, world'

sender_id = 0
text_message = 'Empty'

recommendation = ['–ù–µ –∫–∏–¥–∞–π –º–µ–Ω—Ç–æ—Å –≤ –∫–æ–ª—É!', '–ù–µ —Ä–∏—Å—É–π –Ω–∞ –ø—å—è–Ω—ã—Ö –¥–µ–≤—É—à–∫–∞—Ö!',
 '–ù–µ —Å–∞–¥–∏—Å—å –ø–æ-–±–æ–ª—å—à–æ–º—É –∑–∞ –∫—É—Å—Ç–∏–∫–æ–º –Ω–∞ –ª—ã–∂–Ω–æ–º –∫—É—Ä–æ—Ä—Ç–µ, –Ω–µ —Å–Ω–∏–º–∞—è –ª—ã–∂!', 
 '–ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–π –º—É—Å–æ—Ä, –µ—Å–ª–∏ –≤ –¥—Ä—É–≥–æ–π —Ä—É–∫–µ –¥–µ—Ä–∂–∏—à—å –Ω–æ—É—Ç!', '–ù–µ –∫–æ–≤—ã—Ä—è–π –≤ –Ω–æ—Å—É –ø–∞–ª—å—Ü–µ–º, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑–º–∞–∑—ã–≤–∞–ª –≤–∞—Å–∞–±–∏ –ø–æ —Å–æ—Å–∏—Å–∫–µ!', 
 '–ù–µ –≤—ã—Ö–æ–¥–∏ –Ω–∞ —É–ª–∏—Ü—É –≤ –≥–æ–ª–æ–ª—ë–¥ –ø—Ä–∏ —Å–∏–ª—å–Ω–æ–º —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –∂–µ–ª—É–¥–∫–∞!', '–ù–µ –ø—Ä–æ–±—É–π —Å—É–ø–µ—Ä–∫–ª–µ–π –Ω–∞ –≤–∫—É—Å!', 
 '–ù–µ –æ—Ç–∫—Ä—ã–≤–∞–π –∑–µ–ª—ë–Ω–∫—É –∑—É–±–∞–º–∏!', '–ù–µ –±—É–¥–∏ –ø—å—è–Ω–æ–≥–æ –º—É–∂–∞, –Ω–∞–º–∞–∑–∞–≤ –ª–∏—Ü–æ –º–∞—Å–∫–æ–π!', 
 '–ù–µ –ø–æ–º–µ—â–∞–π –≤ —Å–≤–æ—ë —Ä–µ–∫—Ç–∞–ª—å–Ω–æ–µ –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ —Ä–∞—Å–∫–∞–ª—ë–Ω–Ω—ã–π —É—Ç—é–≥ (–Ω–µ, –Ω—É –∞ –≤–¥—Ä—É–≥ ¬Ø\_(„ÉÑ)_/¬Ø )', '–ù–µ —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤—É, –∑–∞ –∫–æ—Ç–æ—Ä–æ–π –∂—Ä–∞–ª, –≤ —É–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç–µ!', 
 '–ù–µ –ø–æ–∑–≤–æ–ª—è–π —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—Ç—å —Å–µ–±—è –æ—Ä–∞–ª—å–Ω–æ –ª—é–¥—è–º, –ø–æ—á–∏—Å—Ç–∏–≤—à–∏–º –∑—É–±—ã –º–µ–Ω—Ç–æ–ª–æ–≤–æ–π –ø–∞—Å—Ç–æ–π!', '–ù–µ —Å—Ç–∞–≤—å –Ω–∞ —Å–∫—Ä–∏–Ω—Å–µ–π–≤–µ—Ä –ø–æ–∫–∞–∑ —Å–ª–∞–π–¥–æ–≤, –µ—Å–ª–∏ –Ω–µ–ø–æ–¥–∞–ª—ë–∫—É –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–∫—Ä—ã—Ç–∞—è –ø–∞–ø–∫–∞ —Å –ø–æ—Ä–µ–≤–æ–º!', 
 '–ù–µ –≥–æ–≤–æ—Ä–∏ —Ç–∞–º–æ–∂–µ–Ω–Ω–∏–∫–∞–º, —á—Ç–æ —É —Ç–µ–±—è –≤ –∞–Ω—É—Å–µ –ø–∞–∫–µ—Ç —Å –Ω–∞—Ä–∫–æ—Ç–æ–π!', '–ù–µ –æ—Ç–≤–µ—á–∞–π "—Å —Ç—Ä—É–¥–æ–º" –Ω–∞ –≤–æ–ø—Ä–æ—Å –¥–µ–≤—É—à–∫–∏ "–∫–∞–∫ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å –º–æ—é –≥—Ä—É–¥—å?"', 
 '–ù–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π Diablo –Ω–µ–∑–∞–¥–æ–ª–≥–æ –¥–æ –¥–µ–¥–ª–∞–π–Ω–æ–≤!', '–ù–µ –ø–µ—Ä–µ–Ω–æ—Å–∏ –∫–æ–º–ø –Ω–∞ –∫—É—Ö–Ω—é / —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫+—á–∞–π–Ω–∏–∫ –∫ –∫–æ–º–ø—É!', 
 '–ù–µ –≤—Å—Ç—Ä–µ—á–∞–π—Å—è —Å —Å—É–¥–º–µ–¥—ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏!', '–ù–µ –±—Ä–µ–π —è–π—Ü–∞ –∫—Ä–µ–º–æ–º –¥–ª—è —ç–ø–∏–ª—è—Ü–∏–∏!', '–ù–µ —Å–º–µ–π—Å—è –Ω–∞–¥ –ß–∞–∫–æ–º!', '–ù–µ –µ–±–∏ –º–æ–∑–≥–∞!', '–í —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º—ã - –Ω–∞–∫—Ä–∞—Å—å –≥—É–±—ã! (–ö–∞–∫ –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–π?)']

smile = ['&#128543;', '&#128556;', '&#128566;', '&#128554;', '&#128555;', '&#9786;', '&#128512;', '&#128549;', '&#128539;', '&#128534;', 
'&#128548;', '&#128547;', '&#128551;', '&#128529;', '&#128517;', '&#128558;', '&#128542;', '&#128537;', '&#128531;', '&#128513;', 
'&#128561;', '&#128520;', '&#128127;', '&#128169;', '&#128148;', '&#128568;', '&#128569;', '&#128572;', '&#128573;', '&#128574;', 
'&#128575;', '&#128571;', '&#128576;', '&#128570;', '&#127773;', '&#128543;', '&#128556;', '&#128566;', '&#128554;', '&#128555;', 
'&#9786;', '&#128512;', '&#128549;', '&#128539;', '&#128534;', '&#128548;', '&#128547;', '&#128551;', '&#128529;', '&#128517;', 
'&#128558;', '&#128542;', '&#128537;', '&#128531;', '&#128513;', '&#128561;', '&#128520;', '&#128127;', '&#128169;', '&#128148;', 
'&#128568;', '&#128569;', '&#128572;', '&#128573;', '&#128574;', '&#128575;', '&#128571;', '&#128576;', '&#128570;', '&#127773;', 
]

history = ['vk.com/@gambrinus-pohod', 'vk.com/@gambrinus-zhidkii-azot', 'vk.com/@gambrinus-semper-fi', 'vk.com/@gambrinus-lekarstvo-ot-lunatizma', 'vk.com/@gambrinus-zolotaya-rybka', 'vk.com/@gambrinus-zakrytaya-informaciya', 'vk.com/@gambrinus-kot', 'vk.com/@gambrinus-istinnaya-lubov', 'vk.com/@gambrinus-malchik-yasha', 'vk.com/@gambrinus-blagodarnost']




#print (sys.version)

def get_update():
    connect_lpserver = requests.get('https://api.vk.com/method/messages.getLongPollServer', params={'access_token': token, 'v': 5.60}).json()['response']
    #print(connect_lpserver)
    updates = requests.get('https://{server}?act=a_check&key={key}&ts={ts}&wait=25&mode=2&version=2' .format (server = connect_lpserver['server'], key = connect_lpserver['key'], ts = connect_lpserver['ts'])).json()
    return updates


def get_message(updates):
    for update in updates:
        action_code = update[0]
        if action_code == 4:
            message = update
            print('get message test')
            return message
        # except:
        #     sleep(1)
        #     continue
            


def send_message(sender_id, r_message):
    params = {'access_token': token, 'v': 5.60, 'user_ids': sender_id, 'message': r_message}
    r = requests.get('https://api.vk.com/method/messages.send', params=params)


def send_photo(sender_id, attach):
    params = {'access_token': token, 'v': 5.60, 'user_ids': sender_id, 'attachment': attach}
    r = requests.get('https://api.vk.com/method/messages.send', params=params)


# while True:
#     


# photo29465900_456240348

# —Ä–µ–∑–µ—Ä–≤, —Ä–∞–±–æ—á–∏–π
def get_message(updates):
    for update in updates:
        action_code = update[0]
        if action_code == 4:
            sender_id = update[3]
            sender_name = requests.get('https://api.vk.com/method/users.get', params={'access_token': token, 'v': 5.60, 'user_ids': sender_id}).json()['response'][0]
            f_name = sender_name['first_name']
            l_name = sender_name['last_name']
            text_message = update[5]
            print(f_name, l_name, '–ø—Ä–∏—Å–ª–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:', text_message)
            message = json.dump(sender_id, sender_name, text_message)
            return message






while True:
    result = get_update()
    updates = result['updates']
    ts = result['ts']
    sh_ts = len(updates)
    print(ts)
    # print(sh_ts, 'show ts')
    print(sh_ts + ts, 'next')
    for update in updates:
        try:
            action_code = update[0]
            if action_code == 4:
                sender_id = update[3]
                sender_name = requests.get('https://api.vk.com/method/users.get', params={'access_token': token, 'v': 5.60, 'user_ids': sender_id}).json()['response'][0]
                f_name = sender_name['first_name']
                l_name = sender_name['last_name']
                text_message = update[5]
                print('–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ —Å', f_name, l_name, ':', text_message)
                
                if text_message == '–í–∞—Å—è –¥–∞–π —Å–æ–≤–µ—Ç':
                    send_message(sender_id, random.choice(recommendation))
                elif text_message == 'ü§î':
                    send_message(sender_id, random.choice(smile))
                elif text_message == '–ö–∞–∫ –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–π?':
                    message = 'vk.com/@gambrinus-z'
                    send_message(sender_id, message)
                elif text_message == '–í–∞—Å—è —Ä–∞—Å—Å–∫–∞–∂–∏ –∏—Å—Ç–æ—Ä–∏—é':
                    send_message(sender_id, random.choice(history))
                elif text_message == '–õ—é–±–≤–∏ —Ç–µ–±–µ –¥–æ –≥—Ä–æ–±–∞':
                    message = '–•—É–µ–≤—å —Ç–µ–±–µ –ø–∞—á–∫—É!'
                    send_message(sender_id, message)
                else:
                    pass
                    # print ('–ø—Ä–æ–ø—É—Å–∫ —Å–æ–≤–µ—Ç–∞')
                    
        except TypeError:
            print('TupeError message:', message)
        

        # elif action_code == 80:
        #     new_mess_mark = update[1]
        #     if new_mess_mark == 0:
        #         print('–ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç')
        #     else:
        #         pass
        else:
            pass
    






# –¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä
# while True:

#     updates = get_update()
#     print(updates)

    

#     for update in updates:
#         action_code = update[0]
#         if action_code == 4:
#             sender_id = update[3]
#             sender_name = requests.get('https://api.vk.com/method/users.get', params={'access_token': token, 'v': 5.60, 'user_ids': sender_id}).json()['response'][0]
#             f_name = sender_name['first_name']
#             l_name = sender_name['last_name']
#             text_message = update[5]
#             print('–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ —Å', f_name, l_name, ':', text_message)
#         elif action_code == 8:
#             friend_id = update[1] * -1
#             friend_name = requests.get('https://api.vk.com/method/users.get', params={'access_token': token, 'v': 5.60, 'user_ids': friend_id}).json()['response'][0]
#             #print(friend_name)
#             f_name = friend_name['first_name']
#             l_name = friend_name['last_name']
#             # print(f_name, l_name, '—Å–Ω–æ–≤–∞ online')
            
#         elif action_code == 9:
#             friend_id = update[1] * -1
#             friend_name = requests.get('https://api.vk.com/method/users.get', params={'access_token': token, 'v': 5.60, 'user_ids': friend_id}).json()['response'][0]
#             #print(friend_name)
#             f_name = friend_name['first_name']
#             l_name = friend_name['last_name']
#             # print(f_name, l_name, '–≤—ã—à–µ–ª –≤ offline')
#         elif action_code == 80:
#             new_mess_mark = update[1]
#             if new_mess_mark == 0:
#                 print('–ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç')
#             else:
#                 pass
#         else:
#             pass
    
#     if action_code == 4:
#         print('test', sender_id, text_message)

    

# print(sender_id, text_message)

# vk_api.messages.getLongPollHistory()
#test = vk_api.account.getProfileInfo(user_id=29465900)
#print(test)

#vk_api.messages.send(user_id=29465900, message='Hi, this is test message from my new VK bot')





